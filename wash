#!/bin/bash

# Here we have a Perl script that invokes grep in a background, 
# Program checks every outputted mac - if it's inside excluded list ./myExcludedList.txt
# wash output is previously splitted to fragments by Perl split funtion (using space as a separator), 
# first part of splitted string is a MAC address of every AP,
# grep command invoked by Perl that uses backticks looks like: grep "00:11:22:33:44:55" ./myExcludedList.txt 2>/dev/null

# tries to extract monitor name from the ifconfig output
WIRELESS_INTERFACE="wlan0";

getMonitorName(){
    ifconfig | perl -lane '{ if(/^[^\s]*mon/){ $_ =~ s/\s+.*//; print $_; } }'
}
startMonitor(){
      echoGreen "airmon-ng start $WIRELESS_INTERFACE" && airmon-ng start $WIRELESS_INTERFACE
}
stopMonitor() {
	  echoGreen "killall airodump-ng" && killall airodump-ng &>/dev/null;
	  echoGreen "killall aireplay-ng" && killall aireplay-ng &>/dev/null;
	  # if monitor was empty tries to get it
	  if [[ -z "$MONITOR_NAME" ]]; then
	      MONITOR_NAME=$(getMonitorName);
	  fi
	  # if monitor is still empty there's no need to stop it
	  if [[ ! -z "$MONITOR_NAME" ]]; then
	      echoGreen "airmon-ng stop $MONITOR_NAME" && airmon-ng stop $MONITOR_NAME;
	      echoGreen "airmon-ng stop $WIRELESS_INTERFACE" && airmon-ng stop $WIRELESS_INTERFACE;
	      echoGreen "airmon-ng check" && airmon-ng check;
	  fi
}
restartMonitor() {
      stopMonitor;
      startMonitor;
}

# echo green text
echoGreen(){
   echo "$(tput setaf 2)>>>>>> ${1}$(tput sgr0)";
}
# echo blue text
echoBlue(){
   echo "$(tput setaf 6)>>>>>> ${1}$(tput sgr0)";
}

MONITOR_NAME=$(getMonitorName);
if [[ -z "$MONITOR_NAME" ]]; then
   startMonitor;
   MONITOR_NAME=$(getMonitorName);
fi
if [[ -z "$MONITOR_NAME" ]]; then
   restartMonitor;
   MONITOR_NAME=$(getMonitorName);
fi
if [[ -z "$MONITOR_NAME" ]]; then
  echoBlue "ERROR - can't find monitor";
  exit;
fi


if [[ "$1" == "NO_EXCLUDED" ]]; then
  echo "No excluded list provided, searching all access points."
  wash -i $MONITOR_NAME -C -s
elif [[ ! -z "$1" && -f "$1" ]]; then
  echo "Excluded list provided, searching access points without those in file: $1"
  wash -i $MONITOR_NAME -C -s  | perl -lane '{ if(length($_)>17) { @x=split " ", $_; $mac=$x[0]; $res=`grep "$mac" '$1' 2>/dev/null`; if(length($res)>17){  } else{ print $_; } }   }'
else
  echo 'You can use a file containing access points list that you want to EXCLUDE from wash search,'
  echo '(format must be the same as apTargets.txt list)'
  echo 'You can then type: '$0' [PATH_TO_EXCLUDED_APs_FILE]'
  echo 'Example: '$0' ./myExcludedList.txt'
  echo '---------------------------------------------'
  echo "If you don't want to use excluded ap's list, just type:"
  echo "$0 NO_EXCLUDED"
fi



